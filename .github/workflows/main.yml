name: Remote Update and Deploy

on:
  push:
    branches:
      - master  # تشغيل الـ Workflow عند دفع التحديثات على فرع master

jobs:
  remote-update-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.13.0'  # Ensure version consistency

      # Deploy on remote server
      - name: Deploy Application on Remote Server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          password: ${{ secrets.HOSTINGER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            # Navigate to the project directory
            cd /var/www/html/ve-shop.co/ve-frontend
            
            # Stash local changes and pull the latest changes
            git stash --include-untracked
            git pull origin master
            
            # Clean up any old files
            if [ -f package-lock.json ]; then
              rm package-lock.json
            fi
            
            # Ensure Yarn and PM2 are installed
            if ! command -v yarn &> /dev/null; then
              npm install -g yarn
            fi
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi
            
            # Remove node_modules and install fresh dependencies
            rm -rf node_modules
            yarn install --frozen-lockfile
            
            # Build the project
            yarn build
            
            # Graceful reload for PM2 to ensure no downtime
            pm2 stop ve-frontend || true  # Stop the app if it's running
            pm2 start yarn --name "ve-frontend" -- start  # Start new instance
            pm2 save  # Save the PM2 process list
            pm2 gracefulReload ve-frontend  # Graceful reload for better performance
            
            # Restart Nginx to ensure everything is working properly
            sudo systemctl restart nginx
  
          timeout: 60s  # Set timeout for SSH action
          command_timeout: 15m  # Allow enough time for dependencies installation and build process
          debug: true  # Enable detailed logs for debugging
            
            # Final confirmation message
      - name: Confirm Deployment Success
        run: echo "Deployment completed successfully on remote server."
